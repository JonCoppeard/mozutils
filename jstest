#!/bin/bash

function badUsage()
{
    echo "usage: jstest OPTIONS BUILDS TESTS"
    echo "  OPTIONS:"
    echo "    -o      => opt build"
    echo "    -d      => optdebug build"
    echo "    -c      => clean first"
    echo "    -z ZEAL => turn on GC zeal"
    echo "    -l      => run tests in local timezone rather than PST"
    echo "  BUILDS:"
    echo "    default"
    echo "    ggc"
    echo "    min"
    echo "  TESTS:"
    echo "    jsapitest"
    echo "    v8test"
    echo "    jittest"
    echo "    jstest"
    exit 1
}

ORIGINAL_TIMEZONE=`cat /etc/timezone`
ORIGINAL_LOCALE=$LOCALE
TIMEZONE=PST
LOCALE=en_US.utf8

OPT=
OPTDEBUG=
CLEAN=-C
ZEAL=

DEFAULT=
GGC=
MIN=

JSAPITEST=
V8TEST=
JITTEST=
JSTEST=

while [ $# -ge 1 ]; do
    case "$1" in
        -o)
            OPT=-o
            ;;
        -d)
            OPTDEBUG=-d
            ;;
        -c)
            CLEAN=-c
            ;;
        -z)
            ZEAL=$2
            shift
            ;;
        -l)
            TIMEZONE=$ORIGINAL_TIMEZONE
            LOCALE=$ORIGINAL_LOCALE
            ;;
        default)
            DEFAULT=default
            ;;
        ggc)
            GGC=ggc
            ;;
        min)
            MIN=min
            ;;
        jsapitest)
            JSAPITEST=t
            ;;
        v8test)
            V8TEST=t
            ;;
        jittest)
            JITTEST=t
            ;;
        jstest)
            JSTEST=t
            ;;
        *)
            badUsage
            ;;
    esac
    shift
done

if [ -n "$OPT" -a -n "$OPTDEBUG" ]; then
    echo "Can't specify both -d and -o flags"
    exit 1
fi

if [ -z "$DEFAULT" -a -z "$GGC" -a -z "$MIN" ]; then
    DEFAULT=default
fi

if [ -z "$JSAPITEST" -a -z "$V8TEST" -a -z "$JITTEST" -a -z "$JSTEST" ]; then
    JSAPITEST=t
    V8TEST=
    JITTEST=t
    JSTEST=t
fi

echo "jstest $PWD $*"
echo
date
echo

if [ -d .hg ]; then
    hg log -l 1 || exit 1
fi

jsbuild $CLEAN $OPT $OPTDEBUG $DEFAULT $GGC $MIN || exit 125
# Exit status 125 tells bisect to skip the revision if we can't build it
echo

FAILFILE=jstest.failures.tmp

EXIT=0

function fail()
{
    EXIT=1
}

function jsapi-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME jsapi tests"
    JS_GC_ZEAL=$ZEAL TZ=$TIMEZONE $JSDIR/jsapi-tests > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "  failed; run with $JSDIR/jsapi-tests to see failures"
        fail
    fi
    echo
}

function v8-test()
{
    local NAME=$1
    local JSDIR=$2

    local zeal=$ZEAL
    if [ -z "$zeal" ] && [ -z "$OPT" ] && [ -z "$OPTDEBUG" ]; then
        echo "Run $NAME v8 gc stress test"
        zeal=10,1000
    else
        echo "Run $NAME v8 benchmark"
    fi

    cd v8
    JS_GC_ZEAL=$zeal TZ=$TIMEZONE ../$JSDIR/shell -m -n -a run.js || fail
    cd ..

    echo
}

function jit-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME jit tests"
    JS_GC_ZEAL=$ZEAL TZ=$TIMEZONE python jit-test/jit_test.py $JSDIR/shell || fail
    echo
}

function js-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME js tests"
    JS_GC_ZEAL=$ZEAL TZ=$TIMEZONE python tests/jstests.py $JSDIR/shell || fail
    echo
}

function test()
{
    local NAME=$1

    if [ -n "$OPT" ]; then
        NAME=$NAME-opt
    elif [ -n "$OPTDEBUG" ]; then
        NAME=$NAME-optdebug
    fi

    local JSDIR=./$NAME-build

    if [ -n "$JSAPITEST" ]; then
        jsapi-test $NAME $JSDIR
    fi

    if [ -n "$V8TEST" ]; then
        v8-test $NAME $JSDIR
    fi

    if [ -n "$JITTEST" ]; then
        jit-test $NAME $JSDIR
    fi

    if [ -n "$JSTEST" ]; then
        js-test $NAME $JSDIR
    fi
}

if [ -n "$DEFAULT" ]; then
    test default
fi

if [ -n "$GGC" ]; then
    test ggc
fi

if [ -n "$MIN" ]; then
    test min
fi

exit $EXIT
