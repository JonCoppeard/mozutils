#!/bin/bash

CLEAN=
DEBUG=
NOTHREAD=
RELEASE=
JSAPITEST=
V8TEST=
JITTEST=
JSTEST=

while [ $# -ge 1 ]; do
    case "$1" in
        -c)
            CLEAN=-c
            ;;
        -C)
            CLEAN=-C
            ;;
        debug) 
            DEBUG=debug
            ;;
        nothread) 
            NOTHREAD=nothread
            ;;
        release)
            RELEASE=release
            ;;
        jsapitest)
            JSAPITEST=t
            ;;
        v8test)
            V8TEST=t
            ;;
        jittest)
            JITTEST=t
            ;;
        jstest)
            JSTEST=t
            ;;
        *)  
            echo "usage: jstest [-c|-C] [debug|nothread|release] [jsapitest|v8test|jittest|jstest]"
            echo "  -c => clean first (the default)"
            echo "  -C => don't clean first"
            exit 1
            ;;
    esac
    shift
done

if [ -z "$CLEAN" ]; then
    CLEAN=-c
fi

if [ -z "$DEBUG" -a -z "$NOTHREAD" -a -z "$RELEASE" ]; then
    DEBUG=debug
    RELEASE=release
fi

if [ -z "$JSAPITEST" -a -z "$V8TEST" -a -z "$JITTEST" -a -z "$JSTEST" ]; then
    JSAPITEST=t
    V8TEST=t
    JITTEST=t
    JSTEST=t
fi

echo "jstest $PWD $*"
echo
date
echo

hg log -l 1 || exit 1

jsbuild $CLEAN $DEBUG $NOTHREAD $RELEASE || exit 1
echo

FAILFILE=jstest.failures.tmp
LOGFILE=jstest.log

rm -f $LOGFILE
touch $LOGFILE

function print-failures()
{
    if [ -e $FAILFILE ]; then
        local FAILURES=`sort $FAILFILE`
        rm $FAILFILE

        for TEST in $FAILURES; do
            echo "  $TEST failed"
        done
    fi
}

function jsapi-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME jsapi tests"

    $JSDIR/jsapi-tests/jsapi-tests >> $LOGFILE 2>&1
    if [ $? -ne 0 ]; then
        # details of failing test not flushed to logfile by the time the command exits
        echo "  failed; run with $JSDIR/jsapi-tests/jsapi-tests to see failures"
    fi
}

function v8-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME v8 gc stress test"

    cd v8 
    JS_GC_ZEAL=10,1000 ../$JSDIR/js -m -n -a run.js >> ../$LOGFILE 2>&1
    if [ $? -ne 0 ]; then
        echo "  failed"
    fi
    cd ..
}

function jit-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME jit tests"

    rm -f $FAILFILE
    ./jit-test/jit_test.py --no-progress -w $FAILFILE $JSDIR/js >> $LOGFILE
    print-failures
}

function js-test()
{
    local NAME=$1
    local JSDIR=$2

    echo "Run $NAME js tests"

    rm -f $FAILFILE
    # --no-progress and --failure-file don't seem to work
    ./tests/jstests.py -j6 $JSDIR/js | grep -E "^    " > $FAILFILE
    print-failures
}

function test()
{
    local NAME=$1
    local JSDIR=$2

    if [ -n "$JSAPITEST" ]; then
        jsapi-test $NAME $JSDIR
    fi

    if [ -n "$V8TEST" ]; then
        v8-test $NAME $JSDIR
    fi

    if [ -n "$JITTEST" ]; then
        jit-test $NAME $JSDIR
    fi

    if [ -n "$JSTEST" ]; then
        js-test $NAME $JSDIR
    fi
}

if [ -n "$DEBUG" ]; then
    test debug ./debug-build
fi

if [ -n "$NOTHREAD" ]; then
    test nothread ./nothread-build
fi

if [ -n "$RELEASE" ]; then
    test release ./release-build
fi
