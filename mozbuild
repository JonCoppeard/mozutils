#!/bin/bash

LOGFILE=mozbuild.log

CLEAN=
DEBUG=
RELEASE=
DIR=

while [ $# -ge 1 ]; do
    case "$1" in
        -c)
            CLEAN=t
            ;;
        -C)
            CLEAN=
            ;;
        debug)
            DEBUG=t
            ;;
        release)
            RELEASE=t
            ;;
        *)
            if [ -d "$1" ]; then
                DIR=$1
            else
                echo "mozbuild [-c|-C] [debug|release] [DIR]"
                exit 1
            fi
            ;;
    esac
    shift
done

if [ -z "$DEBUG" -a -z "$RELEASE" ]; then
    DEBUG=debug
fi

if [ -n "$DIR" -a ! -d "$DIR" ]; then
    echo Directory not found: $DIR
    exit 1
fi

if [ -n "$DIR" -a -n "$CLEAN" ]; then
    echo "Can't specify clean and directory"
    exit 1
fi

function onPath
{
    command -v $1 > /dev/null
}

if [ -n "$DIR" ]; then
    if ! onPath smartmake.py; then
        echo "Can't find smartmake.py on $PATH"
        exit 1
    fi
fi

if [ ! -e ./client.mk ]; then
    echo Run mozbuild from the root of the tree
    exit 1
fi

function fail()
{        
    echo "Build failed, see $LOGFILE"
    exit 1
}

rm -f $LOGFILE
touch $LOGFILE

function fullBuild()
{
    local NAME=$1
    local CLEAN=$2

    if [ -n "$DEBUG" ]; then
        export MOZCONFIG=~/config/work/mozconfig-$NAME
    else
        export MOZCONFIG=~/config/work/mozconfig-$NAME
    fi

    if [ -n "$CLEAN" ]; then
        echo "Clean $NAME"
        nice make -f client.mk clean >> $LOGFILE 2>&1 || fail
    fi

    echo "Configure $NAME"
    nice make -f client.mk configure >> $LOGFILE 2>&1 || fail

    echo "Build $NAME"
    nice make -f client.mk build >> $LOGFILE 2>&1 || fail
}

function incrBuild()
{
    local NAME=$1
    local DIR=$2

    echo "Build $DIR"
    nice smartmake.py $DIR >> $LOGFILE 2>&1 || fail
}

if [ -z "$DIR" ]; then
    if [ -n "$DEBUG" ]; then
        fullBuild debug "$CLEAN"
    fi

    if [ -n "$RELEASE" ]; then
        fullBuild release "$CLEAN"
    fi
else
    if [ -n "$DEBUG" ]; then
        incrBuild debug "$DIR"
    fi

    if [ -n "$RELEASE" ]; then
        incrBuild release "$DIR"
    fi
fi
