#!/usr/bin/env python

# jstest: Run SpiderMonkey tests

import os
import os.path
import sys
import shutil
import argparse
import subprocess
import glob
import multiprocessing

# Import common functions
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'lib'))
from mozutils import *
from jsconfigs import *

parser = argparse.ArgumentParser(description = 'Run SpiderMonkey tests')
parser.add_argument('-o', '--opt', action='store_true', help = 'Optimized build')
parser.add_argument('-d', '--optdebug', action='store_true', help = 'Optimized debug build')
parser.add_argument('-c', '--clean', action='store_true', help = 'Clean build')
parser.add_argument('-z', '--gczeal', type=int, help = 'GC zeal mode')
parser.add_argument('-t', '--tbpl', action='store_true', help = 'Run TBPL tests')

parser.add_argument('-y', '--stylecheck', action='store_true', help = 'Run style check')
parser.add_argument('-i', '--jsapitest', action='store_true', help = 'Run jsapi tests')
parser.add_argument('-j', '--jittest', action='store_true', help = 'Run jit tests')
parser.add_argument('-s', '--jstest', action='store_true', help = 'Run js tests')
parser.add_argument('-b', '--octane', action='store_true', help = 'Run octane benchmark')

parser.add_argument('-B', '--no-build', action='store_false', dest='build', default=True,
                    help = 'Don\'t build before running tests')
parser.add_argument('configs', nargs = '*', choices = config_names + ['default'], default = 'default',
                    help = 'Build configurations to use')
args = parser.parse_args()

configs = get_configs_from_args(args)
name = get_build_name(configs)
dir = name + '-build'

def run_test(test_name, command):
    print("Run %s %s tests" % (name, test_name))
    rc = subprocess.call(command, shell = True)
    if rc != 0:
        sys.exit("Test failed")
    print('')

chdir_to_source_root()
os.chdir("js/src")

os.environ['TIMEZONE'] = 'PST'
os.environ['LOCALE'] = 'en_US.utf8'
if args.gczeal:
    os.environ['JS_GC_ZEAL'] = str(args.gczeal)

testOptions = '--tbpl' if args.tbpl else ''

try:
    if args.build:
        run_command('jsbuild ' + ' '.join(configs), True, False)
        print('')

    test_all = not any([args.jsapitest, args.jittest, args.jstest, args.octane, args.stylecheck])

    if args.stylecheck or test_all:
        print("Run %s style check" % name)
        run_command("make -C %s check-style" % dir, False, False)
        print('')

    if args.jsapitest or test_all:
        print("Run %s jsapi tests" % name)
        run_command(os.path.join(dir, 'jsapi-tests'), False, False)
        print('')

    if args.jittest or test_all:
        run_test('jit', 'python jit-test/jit_test.py %s %s/shell' % (testOptions, dir))

    if args.jstest or test_all:
        run_test('js', 'python tests/jstests.py %s %s/shell' % (testOptions, dir))

    if args.octane:
        os.chdir('octane')
        run_test('octane', os.path.join('..', dir, 'shell') + ' run.js')
        os.chdir('..')
except KeyboardInterrupt:
    print('')
    print('Interrupted')
    sys.exit(1)
