#!/bin/bash

# Sync a source repo from a remote machine

set -euf -o pipefail

REMOTE_FILE=.cloned-from

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
EXCLUDE_FILE=$SCRIPT_DIR/../etc/rsyncExcludes
if ! [[ -f $EXCLUDE_FILE ]]; then
   echo "Can't find rsync exclude file: $EXCLUDE_FILE"
   exit 1
fi

CLIENT=`echo $SSH_CLIENT | cut -f1 -d' '`
if [[ -z $CLIENT ]]; then
    echo "Can't parse \$SSH_CLIENT: $SSH_CLIENT"
    exit 1
fi

VERBOSE=
if [[ $# -gt 0 && $1 == "-v" ]]; then
    VERBOSE=$1
    shift
fi

DIR=.
CREATE=

if [[ $# -eq 2 && $1 == "-c" ]]; then
    shift

    BRANCH=$1
    shift

    CREATE=1
elif [[ $# -eq 1 ]]; then
    if [[ $1 == "-j" ]]; then
        DIR=js
        shift
    elif [[ $1 == "-d" ]]; then
        DIR=dom
        shift
    elif [[ $1 != -* ]]; then
        DIR=$1
        shift
    fi
fi

if [[ $# -ne 0 ]]; then
    echo "usage: syncBranch [ -v ] ( -c BRANCH | [  -j | -d | SUBDIR ] )"
    echo "Sync remote source repository ~/work/BRANCH from ssh client ($CLIENT)"
    exit 1
fi

if [[ -n $CREATE ]]; then
    # Create a new directory to sync into

    if [[ -e $BRANCH ]]; then
        echo "Directory already exists: $BRANCH"
        exit 1
    fi

    mkdir $BRANCH
    cd $BRANCH
    echo $CLIENT > $REMOTE_FILE
 else
    # Find root of source tree
    while [[ ! -f $REMOTE_FILE ]]; do
        cd ..
        if [[ $OLDPWD == $PWD ]]; then
            echo "Run syncBranch from within a cloned directory"
            exit 1
        fi
    done

    if [[ -d .hg ]]; then
        echo "Refusing to overwrite mercurial repo"
        exit 1
    fi

    if [[ ! -d $DIR ]]; then
        echo "Directory $DIR not found"
        exit 1
    fi

    BRANCH=${PWD##*/}
fi

SOURCE=$CLIENT:work/$BRANCH/$DIR
TARGET=$DIR

echo "Syncing $SOURCE to $TARGET"
rsync \
    $VERBOSE \
    --recursive --rsh=ssh --times --delete --links \
    --include "/third_party/**/*.xcodeproj" \
    --exclude-from="$EXCLUDE_FILE" \
    --exclude /$REMOTE_FILE \
    --exclude /.hg/ \
    --exclude "/*-build/" \
    --exclude "/src/*-build/" \
    --exclude "/js/src/*-build/" \
    --exclude __pycache__/ \
    --exclude "#*#" \
    --exclude /src/configure \
    --exclude /src/old-configure \
    --exclude GSTALE \
    --exclude /testing/mozbase/*/*.egg-info/ \
    $SOURCE/ $TARGET/
