#!/bin/bash

# Sync a source repo from a remote machine

set -euf -o pipefail

REMOTE_FILE=.cloned-from

VERBOSE=
if [[ $# -gt 0 && $1 == "-v" ]]; then
    VERBOSE=$1
    shift
fi

DIR=.
if [[ $# -gt 0 && $1 == "-j" ]]; then
    DIR=js
    shift
elif [[ $# -gt 0 && $1 == "-d" ]]; then
    DIR=dom
    shift
elif [[ $# -eq 1 ]]; then
    DIR=$1
    shift
fi

if [[ $# -ne 0 && $# -ne 2 ]]; then
    echo "usage: syncBranch [ -v ] [ -j | -d ] [ DIR | HOST BRANCH ]"
    echo "Sync remote source repository ~/work/BRANCH from host HOST"
    exit 1
fi

if [[ $# -eq 2 ]]; then
    # Create a new directory to clone into

    REMOTE=$1
    BRANCH=$2
    if [[ -e $BRANCH ]]; then
        echo "Directory already exists: $BRANCH"
        exit 1
    fi
 else
    # Find root of source tree
    while [[ ! -f $REMOTE_FILE ]]; do
        cd ..
        if [[ $OLDPWD == $PWD ]]; then
            echo "Run syncBranch from within a cloned directory"
            exit 1
        fi
    done

    if [[ -d .hg ]]; then
        echo "Refusing to overwrite mercurial repo"
        exit 1
    fi

    REMOTE=`cat $REMOTE_FILE`
    if ! [[ $REMOTE =~ ^[[:alnum:]]+$ ]]; then
        echo "Bad remote hostname set in $REMOTE_FILE: $REMOTE"
        exit 1
    fi
fi

#if ! ping -c 1 $REMOTE > /dev/null 2>&1; then
#    echo "Can't contact remote host: $REMOTE"
#    exit 1
#fi

if [[ $# -eq 2 ]]; then
    mkdir $BRANCH
    cd $BRANCH
    echo $REMOTE > $REMOTE_FILE
fi

BRANCH=${PWD##*/}

SOURCE=$REMOTE:work/$BRANCH/$DIR
TARGET=$DIR

echo "Syncing $SOURCE to $TARGET"
rsync \
    $VERBOSE \
    --recursive --rsh=ssh --times --delete --links \
    --exclude /$REMOTE_FILE \
    --exclude /.hg/ \
    --exclude "/mozconfig-*" \
    --exclude "/*-build/" \
    --exclude "/src/*-build/" \
    --exclude "/js/src/*-build/" \
    --exclude /target/ \
    --exclude "/obj-*/" \
    --exclude __pycache__/ \
    --exclude "*.pyc" \
    --exclude "*~" \
    --exclude "#*#" \
    --exclude .DS_Store \
    --exclude .js-cache/ \
    --exclude /configure \
    --exclude /old-configure \
    --exclude /src/configure \
    --exclude /src/old-configure \
    --exclude /js/src/configure \
    --exclude /js/src/old-configure \
    --exclude "/third_party/python/psutil/*.so" \
    --exclude "/third_party/python/psutil/*.pyd" \
    --exclude "/third_party/python/psutil/build/" \
    --exclude "/third_party/python/psutil/tmp/" \
    --exclude GTAGS \
    --exclude GRTAGS \
    --exclude GSYMS \
    --exclude GPATH \
    $SOURCE/ $TARGET/ || exit $?
