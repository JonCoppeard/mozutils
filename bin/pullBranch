#!/bin/bash

# Sync a source repo from a remote machine

set -euf -o pipefail

REMOTE_FILE=.cloned-from

VERBOSE=
if [ $# -gt 0 ] && [ "$1" == "-v" ]; then
    VERBOSE=$1
    shift
fi

DIR=.
if [ $# -gt 0 ] && [ "$1" == "-j" ]; then
    DIR=js
    shift
elif [ $# -gt 0 ] && [ "$1" == "-d" ]; then
    DIR=dom
    shift
fi

if [ $# -eq 1 ]; then
    # Single argument: sync one dir only.
    DIR=$1
elif [ $# -eq 2 ]; then
    # Two arguments: create a new cloned directory.
    REMOTE=$1
    BRANCH=$2

    if [ -e $BRANCH ]; then
        echo "Directory already exists: $BRANCH"
        exit 1
    fi

    mkdir $BRANCH
    cd $BRANCH
elif [ $# -ne 0 ]; then
    echo "usage: pullBranch [ -v ] [ -j | -d ] [ DIR | HOST BRANCH ]"
    echo "Sync remote source repository ~/work/BRANCH from host HOST"
    exit 1
fi

if [ $# -eq 2 ]; then
    # Create a new directory to clone into

    REMOTE=$1
    BRANCH=$2
    if [ -e $BRANCH ]; then
        echo "Directory already exists: $BRANCH"
        exit 1
    fi
 else
    # Find root of source tree
    while [ ! -f $REMOTE_FILE ]; do
        cd ..
        if [ $OLDPWD == $PWD ]; then
            echo "Run pullBranch from within a cloned directory"
            exit 1
        fi
    done

    if [ -d .hg ]; then
        echo "Refusing to overwrite mercurial repo"
        exit 1
    fi

    REMOTE=`cat $REMOTE_FILE`
    if ! [[ $REMOTE =~ ^[[:alnum:]]+$ ]]; then
        echo "Bad remote hostname set in $REMOTE_FILE: $REMOTE"
        exit 1
    fi
fi

ping -c 1 $REMOTE > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Can't resolve remote hostname: $REMOTE"
    exit 1
fi

if [ $# -eq 2 ]; then
    mkdir $BRANCH
    cd $BRANCH
    echo $REMOTE > $REMOTE_FILE
fi

BRANCH=${PWD##*/}

SOURCE=$REMOTE:work/$BRANCH/$DIR
TARGET=$DIR

echo "Syncing $SOURCE to $TARGET"
rsync \
    $VERBOSE \
    --recursive --rsh=ssh --times --delete --links \
    --exclude /$REMOTE_FILE \
    --exclude /.hg/ \
    --exclude "/mozconfig-*" \
    --include /third_party/rust/winapi-build/ \
    --exclude "*-build/" \
    --exclude __pycache__/ \
    --exclude .js-cache/ \
    --include configure/ \
    --exclude configure \
    --exclude old-configure \
    --exclude "*.pyc" \
    $SOURCE/ $TARGET/ || exit $?
